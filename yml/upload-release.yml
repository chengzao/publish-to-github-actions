name: CI/CD Release Pipeline

on:
  push:
    branches: ["main", "staging"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Create build archive
        run: |
          cd dist
          zip -r ../build-${{ github.ref_name }}.zip .
          cd ..

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.ref_name }}
          path: build-${{ github.ref_name }}.zip
          retention-days: 7

  changelog:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate changelog
        uses: metcalfc/changelog-generator@v4
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload changelog artifact
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: CHANGELOG.md
          retention-days: 7

  release:
    runs-on: ubuntu-latest
    needs: [build, changelog]

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-${{ github.ref_name }}
          path: ./

      - name: Download changelog
        uses: actions/download-artifact@v4
        with:
          name: changelog
          path: ./

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          body: |
            ## Release ${{ github.ref_name }}
            Built from commit: ${{ github.sha }}

            ---
            $(cat CHANGELOG.md)
          tag_name: ${{ github.ref_name == 'main' && format('v{0}', github.run_number) || github.ref_name }}
          draft: false
          prerelease: ${{ github.ref_name != 'main' }}
          files: |
            build-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}