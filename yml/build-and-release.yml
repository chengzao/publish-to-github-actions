name: Build and Release

on:
  # 1. 监听 pull_request 的 labeled 事件（自动触发）
  pull_request:
    types: [labeled]
  # 2. 允许手动触发工作流并输入参数
  workflow_dispatch:
    inputs:
      npm_version:
        description: 'The NPM version to build (e.g., 1.0.0). If not provided, will try to read from VERSION.txt or package.json.'
        required: false
        default: ''

jobs:
  build:
    # 3. 为自动触发设置条件：只有当标签为 'build' 时才运行 job
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.action == 'labeled' && contains(github.event.pull_request.labels.*.name, 'build'))
    runs-on: ubuntu-latest
    outputs:
      resolved_version: ${{ steps.version_setup.outputs.resolved_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 4. 解析或获取版本号
      - name: Resolve version number
        id: version_setup
        run: |
          # 如果手动输入了版本号，优先使用
          if [ -n "${{ github.event.inputs.npm_version }}" ]; then
            echo "resolved_version=${{ github.event.inputs.npm_version }}" >> $GITHUB_OUTPUT
          else
            # 否则，尝试从 VERSION.txt 文件获取（参考了[8]的方法）
            if [ -f "VERSION.txt" ]; then
              VERSION=$(cat VERSION.txt)
              echo "resolved_version=$VERSION" >> $GITHUB_OUTPUT
            else
              # 或者从 package.json 中获取
              VERSION=$(node -p "require('./package.json').version")
              echo "resolved_version=$VERSION" >> $GITHUB_OUTPUT
            fi
          fi
          echo "Using version: ${{ steps.version_setup.outputs.resolved_version }}"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # 5. 使用解析出的版本号进行构建（示例中假设有一个构建脚本接受版本参数）
      - name: Build with version
        run: npm run build -- --version=${{ steps.version_setup.outputs.resolved_version }}
        env:
          BUILD_VERSION: ${{ steps.version_setup.outputs.resolved_version }}

      # 6. （可选）上传构建产物
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ steps.version_setup.outputs.resolved_version }}
          path: dist/ # 假设构建输出在 dist 目录

  # 7. 可以添加其他 job，例如发布到 NPM
  publish_npm:
    needs: build
    if: github.event_name == 'workflow_dispatch' # 示例：仅手动触发时发布
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-${{ needs.build.outputs.resolved_version }}

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # 需要在 repo secrets 中配置 NPM_TOKEN:cite[3]